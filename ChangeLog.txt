--------------------------------------------------------------------------------------------------------------------------------------------
TAG v02-07-03
--------------------------------------------------------------------------------------------------------------------------------------------
Allow CheatingNeutrinoCreation algorithm to deal with multiple mc neutrinos.
Restructuring to allow support for both pandorabuildtools and cetbuildtools, hosted by both github and redmine remote repositories.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v02-07-02
--------------------------------------------------------------------------------------------------------------------------------------------
First, tentative restructuring to allow support for cetbuildtools.
Add NeutrinoInducedOnly parameter to allow assessment of neutrino reconstruction after cosmic ray removal.
Deal with multiple true or reco neutrinos in a better-defined manner in EventValidation algorithm.
Change epsilon used for floating point comparisons in sliding linear fit. Protect against reported negative variances.
Prevent tiny differences yielding macroscopic changes in max and min layers (and hence positions) for sliding fits.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v02-07-01
--------------------------------------------------------------------------------------------------------------------------------------------
Modifications to help ensure algorithm reproducibility for cosmic and neutrino reconstruction paths.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v02-07-00
--------------------------------------------------------------------------------------------------------------------------------------------
Add IsInGap, IsInGap3D and CalculateGapDeltaZ functions to LArGeometryHelper.
Add detector gap and number of acceptable views treatment to VertexSelection algorithm.
Add detector gap treatment to ClusterCharacterisation algorithm.
Add new ClusterExtension algorithm to join clusters across detector gaps.
Add new CrossGapsAssociation algorithm to join clusters across detector gaps.
Add new CosmicRayTrackRecovery algorithm to pick up cosmic ray events with a long track in one view and broken tracks in other views.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v02-06-00
--------------------------------------------------------------------------------------------------------------------------------------------
Add an association between track trajectory points and calo hits (so that it can be persisted into LArSoft)
Include gap information when filtering candidate vertex list.
Work around issue that LArSoft gap information can only be written when processing first event.
VertexSelection algorithm: revert to using nDecayLengthsInZSpan rather than fixed decay constant for beam-weighting.
Correct usage of EventFileWriter.
Update to reflect interface changes for custom persistency.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v02-05-00
--------------------------------------------------------------------------------------------------------------------------------------------
Parameter optimisation for VertexSelection algorithm.
Quieten screen output in event of zero input hits, vertices, etc.
Add version of SplitShowerMerging algorithm.
Refactoring and technical improvements for VertexBasedPfoMerging algorithms.
Add print-out and visualization of mc primary to pfo matching details, plus VisualizeVertexMatches functionality.
Add placeholder pfo stitching implementation.
Add option to recreate input 2D content in StitchingObjectCreation tool.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v02-04-01
--------------------------------------------------------------------------------------------------------------------------------------------
Utilise PandoraMonitoring distance scaling factor.
Address some small issues highlighted by Coverity.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v02-04-00
--------------------------------------------------------------------------------------------------------------------------------------------
Add MultiPandoraApi to handle multiple Pandora instances, used for particle reconstruction in separate volumes and stitching between volumes.
Add first LArStitching algorithms and tools.
Extended interface for 2D and 3D sliding fits to take an input list of cartesian coordinates.
Vertex selection algorithm now runs off hits, rather than clusters.
Vertex selection algorithm now uses kernel estimation to extract a vertex score from 2D weighted hit phi distribution.
Vertex selection algorithm simplification; now runs in either beam mode or topological mode, not some weighted combination of the two.
Improved exception handling in overshoot splitting algorithm.
Improved event slicing configuration, including simple on/off option.
CMake refinement: prefer local include directory to any paths to installed header files.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v02-03-00
--------------------------------------------------------------------------------------------------------------------------------------------
Improvements to CMake build mechanics.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v02-02-00
--------------------------------------------------------------------------------------------------------------------------------------------
Added neutrino parent reconstruction algorithm and event slicing tools, enabling reconstruction of multiple interactions in a single event.
Added cheated event slicing tool, for testing/development.
Enabled use of KD-tree findNearestNeighbour functionality.
List management and error-reporting changes in cases where lists are not present or are empty.
Overhauled vertex list access strategy.
Addressed issues highlighted by Coverity.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v02-01-00
--------------------------------------------------------------------------------------------------------------------------------------------
New algorithms and tools for reconstruction of neutrinos and their hierarchy of daughter particles.
New cheated reconstruction for neutrinos and their hierarchy of daughter particles.
All cheating algorithms now have option to collapse mc hierarchy back to primary particles.
New EventValidation algorithm, which produces detailed ntuple for standalone analysis.
Monitoring functionality overhaul, improving selection of primary mc particles and matching of reconstructed particles to primaries.
Decorated objects in the Pandora EDM to provide value-added LArMCParticle, LArTrackPfo and LArShowerPfo.
ParticleMonitoring and ParticleAnalysis algorithms now handle isolated hits.
Improving consistency between Pfo particle ID and Pfo list names in ParticleRecoveryAlgorithm.
ClusterMopUp algorithm can now read multiple lists of particle flow objects.
Address errors from single-layer sliding fits.
New algorithms to improve reconstruction of short cosmic muons.
Added ConnectedRemnants tool to handle ambiguities between views for shower remnants.
Added VertexBasedPfoRecovery algorithm, to pick up residual tracks around reconstructed neutrino interaction vertex.
Added OvershootSplitting algorithm to fix obvious vertex overshoots, particularly in 5 GeV neutrinos.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v02-00-00
--------------------------------------------------------------------------------------------------------------------------------------------
Update to reflect API change for calo hit creation.
Exception-handling change in ParticleMonitoring algorithm.
Update a few header file include paths.
Fixed CXX_FLAGS for clang 6.0 on APPLE.

--------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------------
TAG v01-01-00
--------------------------------------------------------------------------------------------------------------------------------------------
Efficiency improvements addressing hotspots identified by extensive algorithm profiling. Frequently use kd-trees to avoid expensive calculations.
Improve specification of CMAKE_CXX_FLAGS.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v01-00-00
--------------------------------------------------------------------------------------------------------------------------------------------
Milestone v01 release.
Update to reflect recent changes to PandoraSDK.
Improved const-correctness. Algorithms are now only exposed to pointers to const managed-objects. Access to managed-object non-const functionality is now only via Pandora APIs.
Added concrete implementation of LArTransformationPlugin; hard-coded detector height no longer required.
Moved wire pitch from LArTransformationPlugin to LArPseudoLayerPlugin.
Generalised 'GetExtremalCoordinatesXZ(...)' method so that it works in both 2D and 3D, and rename it 'GetExtremalCoordinates(...)'.
Added a 3D sliding linear fit, made up of two 2D sliding linear fits.
Upgraded pointing clusters to work in 3D as well as 2D.
Added configurable parameters to reject input hits based on cell length scales.
Added methods for relating hits to MC particles.
Added CheatingClusterCharacterisation algorithm.
Added CheatingVertexCreation algorithm.
Added CosmicRayBuilding algorithm.
Added NeutrinoVertexCreation algorithm.
Added ParticleAnalysis algorithm.
Added ProximityBasedMerging algorithm.
Added TrackRecovery algorithm.
Added VertexBasedPfoMerging algorithm.
Added track/shower discrimination; clusters flagged as tracks do not, by default, contribute to the shower tensor or feature in mop-up algorithms.
Improved version of ConeBasedMerging algorithm, using shower edge fits to create and extrapolate a shower area in each view.
Added candidate vertex creation and selection framework.
Introduced beam-mode vertex selection, reliably reduces input list of candidate vertices down to just two or three possibilities, for further investigation.
Restructured shower-growing, splitting into two algorithms and using vertex, if available, to make shower-growing decisions.
Quietened routine print statements.
Tuning and improved exception handling.
Address issues highlighted by coverity.
Makefile and CMakeLists overhaul.

--------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------------
TAG v00-06
--------------------------------------------------------------------------------------------------------------------------------------------
Update to reflect recent changes to PandoraSDK.
Overhaul, with emphasis on ensuring that client applications can instantiate and use multiple concurrent pandora instances.
Address issues highlighted by Coverity.
Improved member variable initialization, with a default constructor for each algorithm.
Improved construction of TwoDSlidingFitResults so that they cannot exist in an uninitialized state.
Improved exception handling.
Make use of improved monitoring functionality.
Add to lar_content namespace.
Address rare exceptions (floating point precision, hits outside detector, etc.) identified from long cosmic validation runs.
Remove calo hits with zero transverse width or zero input pulse height.

--------------------------------------------------------------------------------------------------------------------------------------------
Tag v00-05-pre.
--------------------------------------------------------------------------------------------------------------------------------------------
Extensive development work - see svn log for details.

--------------------------------------------------------------------------------------------------------------------------------------------
Tag v00-04-pre.
--------------------------------------------------------------------------------------------------------------------------------------------
Extensive development work - see svn log for details.

--------------------------------------------------------------------------------------------------------------------------------------------
Tag v00-03-pre.
--------------------------------------------------------------------------------------------------------------------------------------------
Extensive development work - see svn log for details.

--------------------------------------------------------------------------------------------------------------------------------------------
Tag v00-02-pre.
--------------------------------------------------------------------------------------------------------------------------------------------
Extensive development work - see svn log for details.

--------------------------------------------------------------------------------------------------------------------------------------------
Tag v00-00-pre.
--------------------------------------------------------------------------------------------------------------------------------------------
Created pandora LAr Content library, containing algorithms, algorithm tools, plugins and helper classes for reconstructing events in liquid argon tpcs.

--------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------------
GENERAL INFO:
Pandora consists of the PandoraSDK (Software Development Kit), which comprises a single library and header files with flexible APIs.
There is also an optional PandoraMonitoring library, which contains event display and tree/histogram-writing functionality.
The PandoraMonitoring library depends on the PandoraSDK and ROOT.
Pandora algorithms will necessarily depend upon the PandoraSDK (and also PandoraMonitoring, if desired).
The algorithms can be built as part of a Pandora client application, such as MarlinPandora, or the standalone TestPandora binary.
Algorithms declared to be suitably generic may be designed for use by multiple client applications.
Such re-usable algorithms are best bundled together into a Pandora "content" library.
Algorithms are always registered via the client application, using the PandoraAPIs, but the client app can link against as many content libraries as required.
--------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------------
