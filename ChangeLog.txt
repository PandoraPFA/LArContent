--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_16_00
--------------------------------------------------------------------------------------------------------------------------------------------
Added HitWidthClusterMerging algorithm.
Added LArHitWidthHelper.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_15_16
--------------------------------------------------------------------------------------------------------------------------------------------
Restructured 2D->3D matching algorithms in order to support two-view matching approaches.
Further restructuring of 2D->3D matching for optimal sharing of code between two-view and three-view cases.
Added option to fold/unfold mc particle hierarchies in event validation processes.
Allowed validation algorithms to read all primary selection parameters from xml.
Templated PfoCharacterisation algorithm on mva type.
Tidied up contents of pfo info map when adjusting vertex.
Handled variable that was unused only in case when building with monitoring off.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_15_15
--------------------------------------------------------------------------------------------------------------------------------------------
Changes to the in-LArSoft build mechanics, from the LArSoft team.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_15_14
--------------------------------------------------------------------------------------------------------------------------------------------
Added dual-phase option to change vertex from highest-Y to highest-X in CosmicRayVertexBuilding algorithm.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_15_13
--------------------------------------------------------------------------------------------------------------------------------------------
Changes to the in-LArSoft build mechanics, from the LArSoft team.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_15_12
--------------------------------------------------------------------------------------------------------------------------------------------
Templated NeutrinoIdTool to use MVA and fixed training by getting parent address of calo hit.
Added option to decide whether to remove out time hits in master algorithm.
Added X0 to output validation root trees.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_15_11
--------------------------------------------------------------------------------------------------------------------------------------------
Changes to the in-LArSoft build mechanics, from the LArSoft team.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_15_10
--------------------------------------------------------------------------------------------------------------------------------------------
Added e19 and c7 build options.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_15_09
--------------------------------------------------------------------------------------------------------------------------------------------
Now use eigen v3_3_5.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_15_08
--------------------------------------------------------------------------------------------------------------------------------------------
Ensured agreement between interaction vertex position and at least one pfo (largest in no other vertex-associated pfos).
Renamed EventValidation algorithm -> NeutrinoEventValidation algorithm.
Refactoring of vertex selection functionality.
Added CheatingVertexSelection algorithm.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_15_07
--------------------------------------------------------------------------------------------------------------------------------------------
Persist the test beam interaction vertex for reconstructed test beam particles.
Return type check in GetGlobalFitDirection function in shower asymmetry feature tool.
Added is pfo variable is test beam hiererachy to test beam hierarchy event validation tree.
Remove references to neutrinos in cheated test beam particle id tool.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_15_06
--------------------------------------------------------------------------------------------------------------------------------------------
Changes to the in-LArSoft build mechanics, from the LArSoft team.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_15_05
--------------------------------------------------------------------------------------------------------------------------------------------
Changes to the in-LArSoft build mechanics, from the LArSoft team.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_15_04
--------------------------------------------------------------------------------------------------------------------------------------------
Modification to inheritance structure of master algorithm to allow users to register custom content in daughter pandora instances.
Added ability to skip event reconstruction if an excessive number of hits are present in the event.
Adjusted use of MCParticle to Pfo matching map to avoid exception being thrown in monitoring algorithms.
Fix coverity stripping in untar.
Restructuring of the event validation algorithms and introduction of ProtoDUNE test beam hierarchy validation algorithm.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_15_03
--------------------------------------------------------------------------------------------------------------------------------------------
Null commit required to syncronise redmine and github versioning.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_15_02
--------------------------------------------------------------------------------------------------------------------------------------------
Added test beam interaction training mode functionality to machine learning vertex selection algorithm.
Extended the comparison operator for the LArShowerOverlapResult to resolve reproducibility issue.
Added ability to register custom content in algorithms deriving from the Master algorithm.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_15_01
--------------------------------------------------------------------------------------------------------------------------------------------
Modification to stitching logic such that stitches are only made from the pair of associated pfos with the largest number of hits.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_15_00
--------------------------------------------------------------------------------------------------------------------------------------------
Templated SvmVertexSelection algorithm on mva type and rename to MvaVertexSelection.
Added functionality to reduce number of candidate vertices in shower-like regions.
Added extra variable for selecting pfos to use in stitching.
Removed variable name in arguments of default functions.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_14_08
--------------------------------------------------------------------------------------------------------------------------------------------
Simplification and restructuring of the ClearTrackFragments tool to clarify operations and ease future maintenance.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_14_07
--------------------------------------------------------------------------------------------------------------------------------------------
Changes to the in-LArSoft build mechanics, from the LArSoft team.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_14_06
--------------------------------------------------------------------------------------------------------------------------------------------
Define out of time slices in CR tagging using all pfos in slice.
Correct mapping between HitType and ClusterList in an hitherto unused map.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_14_05
--------------------------------------------------------------------------------------------------------------------------------------------
Adding option to always calculate T0 when stitching cosmics rays.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_14_04
--------------------------------------------------------------------------------------------------------------------------------------------
Modified the stitching cosmic ray logic to allow for stitching across an APA boundary.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_14_03
--------------------------------------------------------------------------------------------------------------------------------------------
Updated numbering convention for slice indices.
Refactoring bdt beam particle id class to resolve compiler error on MacOS.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_14_02
--------------------------------------------------------------------------------------------------------------------------------------------
Added IsClearCosmic label to metadata for stitched cosmic rays.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_14_01
--------------------------------------------------------------------------------------------------------------------------------------------
Changes to the in-LArSoft build mechanics, from the LArSoft team.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_14_00
--------------------------------------------------------------------------------------------------------------------------------------------
Restructured test beam particle creation algorithm to work within worker instance.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_13_02
--------------------------------------------------------------------------------------------------------------------------------------------
Changes to the in-LArSoft build mechanics, from the LArSoft team.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_13_01
--------------------------------------------------------------------------------------------------------------------------------------------
Added slice id metadata to output pfos.
Added names to pandora worker instances in master algorithm.
Replaced assumed w/z equivalence with use of LArTransformationPlugin YZtoW.
Altered IsTestBeam function in LArPfoHelper to use Pfo PropertiesMap.
Added bestMatchPfoIsTestBeam vector to event validation output tree and edited printout in event validation algorithm.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_13_00
--------------------------------------------------------------------------------------------------------------------------------------------
Updated lar rotational transformation plugin implementation to handle a non-zero w wire angle. Sign convention for v wire angle also changed.
First use of PfoPropertiesMap, in neutrino and test beam particle creation algorithms, and when copying/recreating any pfo instances.
Added CheatingCosmicRayRemoval algorithm.
Added vertices for cheated (non-neutrino) particles.
Corrected particle id comparison inside LArPfoHelper::IsTestBeam.
Modified accuracy used in calculation of intersection between PCA fit and LArTPC.
Added option to pass MCParticle instances, relationships and links to CaloHits, to Pandora worker instances.
Cheating tools no longer need to navigate back to master CaloHit instances in order to access MCParticle information.
Pandora worker instances now initialized at start of first event, as client app is unable to extract gap information before that point.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_12_01
--------------------------------------------------------------------------------------------------------------------------------------------
Minor changes from the LArSoft team.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_12_00
--------------------------------------------------------------------------------------------------------------------------------------------
Restructured LArSupportVectorMachine class and converted the LArSvmHelper into the more generic LArMvaHelper.
Added LArAdaBoostDecisionTree class.
Added BDT beam particle id tool.
Added test beam particle creation algorithm.
Added configurable option to position test beam particle vertex at lowest Z calo hit.
Removed neutrino reference in CheatingCosmicRayTaggingTool.
Modified the purity and completeness calculation used in neutrino id training.
Moved the GetSigmaUVW function to the LArGeometryHelper.
Modified the event validation algorithm to work with ProtoDUNE.
Added functionality to weight Cartesian points in Pca fits.
Updated exception handling in svm track/shower id
Removed unused SVMClusterCharacterisationAlgorithm

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_11_01
--------------------------------------------------------------------------------------------------------------------------------------------
Changes to the in-LArSoft build mechanics, from the LArSoft team.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_11_00
--------------------------------------------------------------------------------------------------------------------------------------------
Control flow updates relating to stitching of cosmic-ray muons that cross the mid plane in e.g. ProtoDUNE.
Overhauled, and added where necessary, cheating versions of all tools used for steps in the Pandora consolidated reconstruction.
Added NeutrinoIdentification tool, and a SimpleNeutrinoIdentification tool to provide old, placeholder functionality.
Added new beam particle interaction types to the interaction type helper class.
Remastering of PatRec validation metrics to fully handle comic-ray backgrounds.
Refactoring and redistribution of functionality between LArMCParticleHelper and LArMonitoringHelper.
Added LArFormattingHelper to print tables to terminal.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_10_01
--------------------------------------------------------------------------------------------------------------------------------------------
Changes to the in-LArSoft build mechanics, from the LArSoft team.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_10_00
--------------------------------------------------------------------------------------------------------------------------------------------
Added SVM Pfo characterisation using 3D information.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_09_03, v03_09_04
--------------------------------------------------------------------------------------------------------------------------------------------
Changes to the in-LArSoft build mechanics, from the LArSoft team.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_09_02
--------------------------------------------------------------------------------------------------------------------------------------------
Ensured compliance of output track products, including ordering of associated trajectory points.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_09_01
--------------------------------------------------------------------------------------------------------------------------------------------
Added support for use with CartesianVector only (i.e. no CaloHits) input to LArPfoHelper::SortByHitProjection.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_09_00
--------------------------------------------------------------------------------------------------------------------------------------------
Replaced parent algorithms with new master algorithm, which uses Pandora worker instances, rather than purely daughter algorithms and tools.
Plugins now handle presence of multiple LArTPCs registered with master instance.
Slicing now occurs entirely within a Pandora worker instance.
Introduced pre- and post-processing algorithms.
Added LArControlFlow directory, collecting algorithms, tools and other content associated with overall control flow.
Added new, improved interface for neutrino id tools.
Replaced stitching info with simple Pfo to LArTPC map.
Used LArFileHelper to access worker PandoraSetting files or SVM data files, removing in-LArSoft usage of cetlib.
Adopted use of LArTPC volume ids, stored in derived LArCaloHit class.
Applied x0 shift to Pfo hits and vertices, using vertex x0 value in cosmic-ray tagging.
Added option to visualize reconstruction status at a number of key stages.
Added frst version of beam particle identification logic.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_08_00
--------------------------------------------------------------------------------------------------------------------------------------------
Consolidated approach made available, with ParentAlgorithm guiding a number of different reconstruction options.
ParentAlgorithm reconstruction options: Full, AllHitsCR, AllHitsNu, CRRemHitsSliceCR, CRRemHitsSliceNu, AllHitsSliceCR, AllHitsSliceNu.
Added first, simple implementation of NeutrinoId tool.
Added first implementation of CosmicRayTagging tool.
Parent algorithm and EventReading algorithm now offer external configuration options for single-instance (per-Pandora instance) usage.
EventReading algorithm now has ability to read lists of event files and terminate when last event reached.
Renamed ListDissolution algorithm as ListPruning algorithm, and added vertex functionality.
Coverity-motivated changes to the development cheating-based reconstruction chain.
Overhauled and simplied MultiPandoraApi, removing VolumeInfo structures.
Updated stitching algorithms and helper to use new LArTPC geometry description available in Pandora SDK v03-01-00.
LArTransformation and LArPseudoLayer plugins are now proper Pandora plugins in Pandora SDK v03-01-00, not a LArContent add-on.
LineGaps now have a line gap type, start/end x and z positions in Pandora SDK v03-01-00.
Explicitly handled a few exceptions causing some algorithms to bail in rare circumstances.
Added UnattachedDeltaRays algorithm.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_07_04
--------------------------------------------------------------------------------------------------------------------------------------------
Tweaked tie-breaking in shower and track overlap result operators.
Added the possibility to work with track vs. shower probabilities instead of binary classification.
Modified track direction for compatibility with LArSoft.
Fixed forward/backward asymmetries in 2D and 3D sliding linear fits.
Simplified PcaShowerParticleBuildingAlgorithm by moving bulk of PCA calculations to LArPfoHelper.
Refactored SlidingFitTrajectory implementation.
Moved track trajectory determination into LArPfoHelper and removed any assumptions about sliding fit direction conventions.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_07_03
--------------------------------------------------------------------------------------------------------------------------------------------
Selected license: GPLv3.
Added codecov and badge.
Added Coverity scan and badge.
Addressed Coverity recommendations.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_07_02
--------------------------------------------------------------------------------------------------------------------------------------------
Added TravisCI builds, Coverity scan and badge.
Added probability functionality to SVMs.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_07_01
--------------------------------------------------------------------------------------------------------------------------------------------
Changes to the in-LArSoft build mechanics, from the LArSoft team.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_07_00
--------------------------------------------------------------------------------------------------------------------------------------------
Added Eigen dependency and handled this in build tools.
Brought PcaShowerParticleBuilding algorithm into LArContent, from LArPandora.
Used Eigen to determine coordinate system for 2D and 3D sliding linear fits.
Updated shower direction convention: principal axis points away from vertex (which is assumed to be closer to start of shower than centroid).
Added LArCaloHit, holding track, shower, michel and other classification probabilities.
Introduced new vertex selection procedure using svm approach.
Introduced new track vs. shower identification using svm approach.
Used cet search_path functionality to find svm data files in FW_SEARCH_PATH.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_06_00
--------------------------------------------------------------------------------------------------------------------------------------------
Functionality for cosmic-ray stitching and neutrino reconstruction using detectors that have multiple drift volumes

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_05_00
--------------------------------------------------------------------------------------------------------------------------------------------
Restructured 3D spacepoint creation algorithm and tools, including new iterative refinement of output spacepoints.
Added new rule for identifying end-associations to build particle hierarchy.
Added support vector machine interface.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_03_00, v03_04_00
--------------------------------------------------------------------------------------------------------------------------------------------
Changes to the in-LArSoft build mechanics, from the LArSoft team.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_02_00
--------------------------------------------------------------------------------------------------------------------------------------------
Added LArShowerPfo properties, to hold shower additional/derived shower properties whilst in Pandora.
New LArPCAShowerParticleBuilding algorithm, currently build as part of larpandora translation module, populates LArShowerPfo properties.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_01_03
--------------------------------------------------------------------------------------------------------------------------------------------
Added MaxFitSegmentIndex parameter to ThreeDTransverseTracks algorithm.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_01_02
--------------------------------------------------------------------------------------------------------------------------------------------
Improved tie-breaker conditions for extremal cluster definitions in ClusterAssociation algorithms.
Reduced default value for NMaxTensorToolRepeats.
Added configurable parameter to control max number of crossing vertex candidates.
Protect against calls to calculate intersection of parallel lines, which raises an exception.
Updated EventValidation algorithm to handle environment where neutrino-induced events are overlaid with cosmic-ray muon background.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_01_01
--------------------------------------------------------------------------------------------------------------------------------------------
Improved hit-association mechanics and identification of good primary particles in EventValidation algorithm.
Added integrate over slices functionality to EventValidation algorithm.
Changed default setting for crossing vertex candidates to off.
Added ability to provide a cheated vertex x offset.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_01_00
--------------------------------------------------------------------------------------------------------------------------------------------
Overhauled track vs. shower identification, moving it into algorithms that deal with it explicitly, by characterising clusters and pfos.
Added effective overlap treatment, considering detector gaps: new TracksCrossingGaps tensor tool and new ParticleRecovery alg functionality.
Altered default parameters for VertexSplitting algorithm and added vertex association functionality to SlidingConePfoMopUp algorithm.
Removed influence of any hits that are deemed post-neutron in the EventValidation algorithm performance metrics.
Added MCParticleMonitoring algorithm.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v03_00_00
--------------------------------------------------------------------------------------------------------------------------------------------
Updated to reflect sdk interface changes.
Updated to reflect change to managed container and Pandora typedefs.
Enforced object uniqueness in lists where it was previously implicit by use of std::unordered_set.
Reviewed all unordered containers used by algorithms.
Efficiency improvements motivated by performance tests.
Improved clarity of reclustering in ClearTrackFragments tool.
Provided well-defined overlap result in ThreeDRemnants algorithm.

--------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------------
TAG v02_08_01
--------------------------------------------------------------------------------------------------------------------------------------------
Switched kd tree interface to take a vector of points.
Improved handling of unordered maps in extension algorithms.
Ensured new tensor elements are calculated with modified, merged cluster.
Reduced maximum distance to allow addition of isolated hits.
Added option to include isolated hits in neutrino characterisation.
ApplyPfoSelectionRules all matching criteria to define strong matches in event validation.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v02_08_00
--------------------------------------------------------------------------------------------------------------------------------------------
Added CrossingVertexCandidate creation algorithm.
Added EnergyKickVertexSelection algorithm and factored common VertexSelection functionality into base class.
Added ThreeDSlidingConeFitResult and exploit in EventSlicing tool, SlidingConePfoMopUp and SlidingConeClusterMopUp algorithms.
Refactored Pfo and Cluster MopUp algorithms, moved PfoRecovery algorithms into a separate directory.
Separate (loosely grouped) 2D- and 3D-based MopUp algorithms in NeutrinoParent algorithm.
Overhaul IsolatedClusterMopUp algorithm and use kd trees to provide nearest neighbour search.
Tweaked logic for making Pfo parent-daughter associations.
Added CheatingPfoCharacterisation algorithm.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v02_07_08 (v02_07_09 metadata changes only)
--------------------------------------------------------------------------------------------------------------------------------------------
Improved visualization of neutrino event reconstruction problems.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v02_07_07
--------------------------------------------------------------------------------------------------------------------------------------------
Tweak EventValidation algorithm screen printout.
Add new functionality to EventWriting algorithm, allowing filtration by final state mc particles and neutrino interaction vertex position.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v02_07_06
--------------------------------------------------------------------------------------------------------------------------------------------
Remove unused variable (assigned to in constructor, but still ultimately unused).

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v02_07_04 (v02_07_05 metadata changes only)
--------------------------------------------------------------------------------------------------------------------------------------------
Cosmetic change to LArContent header, more flexible functionality for TwoDParticleCreation algorithm.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v02_07_03
--------------------------------------------------------------------------------------------------------------------------------------------
Allow CheatingNeutrinoCreation algorithm to deal with multiple mc neutrinos.
Restructuring to allow support for both pandorabuildtools and cetbuildtools, hosted by both github and redmine remote repositories.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v02_07_02
--------------------------------------------------------------------------------------------------------------------------------------------
First, tentative restructuring to allow support for cetbuildtools.
Add NeutrinoInducedOnly parameter to allow assessment of neutrino reconstruction after cosmic ray removal.
Deal with multiple true or reco neutrinos in a better-defined manner in EventValidation algorithm.
Change epsilon used for floating point comparisons in sliding linear fit. Protect against reported negative variances.
Prevent tiny differences yielding macroscopic changes in max and min layers (and hence positions) for sliding fits.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v02-07-01
--------------------------------------------------------------------------------------------------------------------------------------------
Modifications to help ensure algorithm reproducibility for cosmic and neutrino reconstruction paths.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v02-07-00
--------------------------------------------------------------------------------------------------------------------------------------------
Add IsInGap, IsInGap3D and CalculateGapDeltaZ functions to LArGeometryHelper.
Add detector gap and number of acceptable views treatment to VertexSelection algorithm.
Add detector gap treatment to ClusterCharacterisation algorithm.
Add new ClusterExtension algorithm to join clusters across detector gaps.
Add new CrossGapsAssociation algorithm to join clusters across detector gaps.
Add new CosmicRayTrackRecovery algorithm to pick up cosmic ray events with a long track in one view and broken tracks in other views.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v02-06-00
--------------------------------------------------------------------------------------------------------------------------------------------
Add an association between track trajectory points and calo hits (so that it can be persisted into LArSoft)
Include gap information when filtering candidate vertex list.
Work around issue that LArSoft gap information can only be written when processing first event.
VertexSelection algorithm: revert to using nDecayLengthsInZSpan rather than fixed decay constant for beam-weighting.
Correct usage of EventFileWriter.
Update to reflect interface changes for custom persistency.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v02-05-00
--------------------------------------------------------------------------------------------------------------------------------------------
Parameter optimisation for VertexSelection algorithm.
Quieten screen output in event of zero input hits, vertices, etc.
Add version of SplitShowerMerging algorithm.
Refactoring and technical improvements for VertexBasedPfoMerging algorithms.
Add print-out and visualization of mc primary to pfo matching details, plus VisualizeVertexMatches functionality.
Add placeholder pfo stitching implementation.
Add option to recreate input 2D content in StitchingObjectCreation tool.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v02-04-01
--------------------------------------------------------------------------------------------------------------------------------------------
Utilise PandoraMonitoring distance scaling factor.
Address some small issues highlighted by Coverity.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v02-04-00
--------------------------------------------------------------------------------------------------------------------------------------------
Add MultiPandoraApi to handle multiple Pandora instances, used for particle reconstruction in separate volumes and stitching between volumes.
Add first LArStitching algorithms and tools.
Extended interface for 2D and 3D sliding fits to take an input list of cartesian coordinates.
Vertex selection algorithm now runs off hits, rather than clusters.
Vertex selection algorithm now uses kernel estimation to extract a vertex score from 2D weighted hit phi distribution.
Vertex selection algorithm simplification; now runs in either beam mode or topological mode, not some weighted combination of the two.
Improved exception handling in overshoot splitting algorithm.
Improved event slicing configuration, including simple on/off option.
CMake refinement: prefer local include directory to any paths to installed header files.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v02-03-00
--------------------------------------------------------------------------------------------------------------------------------------------
Improvements to CMake build mechanics.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v02-02-00
--------------------------------------------------------------------------------------------------------------------------------------------
Added neutrino parent reconstruction algorithm and event slicing tools, enabling reconstruction of multiple interactions in a single event.
Added cheated event slicing tool, for testing/development.
Enabled use of KD-tree findNearestNeighbour functionality.
List management and error-reporting changes in cases where lists are not present or are empty.
Overhauled vertex list access strategy.
Addressed issues highlighted by Coverity.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v02-01-00
--------------------------------------------------------------------------------------------------------------------------------------------
New algorithms and tools for reconstruction of neutrinos and their hierarchy of daughter particles.
New cheated reconstruction for neutrinos and their hierarchy of daughter particles.
All cheating algorithms now have option to collapse mc hierarchy back to primary particles.
New EventValidation algorithm, which produces detailed ntuple for standalone analysis.
Monitoring functionality overhaul, improving selection of primary mc particles and matching of reconstructed particles to primaries.
Decorated objects in the Pandora EDM to provide value-added LArMCParticle, LArTrackPfo and LArShowerPfo.
ParticleMonitoring and ParticleAnalysis algorithms now handle isolated hits.
Improving consistency between Pfo particle ID and Pfo list names in ParticleRecoveryAlgorithm.
ClusterMopUp algorithm can now read multiple lists of particle flow objects.
Address errors from single-layer sliding fits.
New algorithms to improve reconstruction of short cosmic muons.
Added ConnectedRemnants tool to handle ambiguities between views for shower remnants.
Added VertexBasedPfoRecovery algorithm, to pick up residual tracks around reconstructed neutrino interaction vertex.
Added OvershootSplitting algorithm to fix obvious vertex overshoots, particularly in 5 GeV neutrinos.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v02-00-00
--------------------------------------------------------------------------------------------------------------------------------------------
Update to reflect API change for calo hit creation.
Exception-handling change in ParticleMonitoring algorithm.
Update a few header file include paths.
Fixed CXX_FLAGS for clang 6.0 on APPLE.

--------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------------
TAG v01-01-00
--------------------------------------------------------------------------------------------------------------------------------------------
Efficiency improvements addressing hotspots identified by extensive algorithm profiling. Frequently use kd-trees to avoid expensive calculations.
Improve specification of CMAKE_CXX_FLAGS.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v01-00-00
--------------------------------------------------------------------------------------------------------------------------------------------
Milestone v01 release.
Update to reflect recent changes to PandoraSDK.
Improved const-correctness. Algorithms are now only exposed to pointers to const managed-objects. Access to managed-object non-const functionality is now only via Pandora APIs.
Added concrete implementation of LArTransformationPlugin; hard-coded detector height no longer required.
Moved wire pitch from LArTransformationPlugin to LArPseudoLayerPlugin.
Generalised 'GetExtremalCoordinatesXZ(...)' method so that it works in both 2D and 3D, and rename it 'GetExtremalCoordinates(...)'.
Added a 3D sliding linear fit, made up of two 2D sliding linear fits.
Upgraded pointing clusters to work in 3D as well as 2D.
Added configurable parameters to reject input hits based on cell length scales.
Added methods for relating hits to MC particles.
Added CheatingClusterCharacterisation algorithm.
Added CheatingVertexCreation algorithm.
Added CosmicRayBuilding algorithm.
Added NeutrinoVertexCreation algorithm.
Added ParticleAnalysis algorithm.
Added ProximityBasedMerging algorithm.
Added TrackRecovery algorithm.
Added VertexBasedPfoMerging algorithm.
Added track/shower discrimination; clusters flagged as tracks do not, by default, contribute to the shower tensor or feature in mop-up algorithms.
Improved version of ConeBasedMerging algorithm, using shower edge fits to create and extrapolate a shower area in each view.
Added candidate vertex creation and selection framework.
Introduced beam-mode vertex selection, reliably reduces input list of candidate vertices down to just two or three possibilities, for further investigation.
Restructured shower-growing, splitting into two algorithms and using vertex, if available, to make shower-growing decisions.
Quietened routine print statements.
Tuning and improved exception handling.
Address issues highlighted by coverity.
Makefile and CMakeLists overhaul.

--------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------------
TAG v00-06
--------------------------------------------------------------------------------------------------------------------------------------------
Update to reflect recent changes to PandoraSDK.
Overhaul, with emphasis on ensuring that client applications can instantiate and use multiple concurrent pandora instances.
Address issues highlighted by Coverity.
Improved member variable initialization, with a default constructor for each algorithm.
Improved construction of TwoDSlidingFitResults so that they cannot exist in an uninitialized state.
Improved exception handling.
Make use of improved monitoring functionality.
Add to lar_content namespace.
Address rare exceptions (floating point precision, hits outside detector, etc.) identified from long cosmic validation runs.
Remove calo hits with zero transverse width or zero input pulse height.

--------------------------------------------------------------------------------------------------------------------------------------------
Tag v00-05-pre.
--------------------------------------------------------------------------------------------------------------------------------------------
Extensive development work - see svn log for details.

--------------------------------------------------------------------------------------------------------------------------------------------
Tag v00-04-pre.
--------------------------------------------------------------------------------------------------------------------------------------------
Extensive development work - see svn log for details.

--------------------------------------------------------------------------------------------------------------------------------------------
Tag v00-03-pre.
--------------------------------------------------------------------------------------------------------------------------------------------
Extensive development work - see svn log for details.

--------------------------------------------------------------------------------------------------------------------------------------------
Tag v00-02-pre.
--------------------------------------------------------------------------------------------------------------------------------------------
Extensive development work - see svn log for details.

--------------------------------------------------------------------------------------------------------------------------------------------
Tag v00-00-pre.
--------------------------------------------------------------------------------------------------------------------------------------------
Created pandora LAr Content library, containing algorithms, algorithm tools, plugins and helper classes for reconstructing events in liquid argon tpcs.

--------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------------
GENERAL INFO:
Pandora consists of the PandoraSDK (Software Development Kit), which comprises a single library and header files with flexible APIs.
There is also an optional PandoraMonitoring library, which contains event display and tree/histogram-writing functionality.
The PandoraMonitoring library depends on the PandoraSDK and ROOT.
Pandora algorithms will necessarily depend upon the PandoraSDK (and also PandoraMonitoring, if desired).
The algorithms can be built as part of a Pandora client application, such as MarlinPandora, or the standalone TestPandora binary.
Algorithms declared to be suitably generic may be designed for use by multiple client applications.
Such re-usable algorithms are best bundled together into a Pandora "content" library.
Algorithms are always registered via the client application, using the PandoraAPIs, but the client app can link against as many content libraries as required.
--------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------------
